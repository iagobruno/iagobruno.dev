@import 'tailwindcss';

/* Use a selector-based strategy in your project for dark mode */
@variant dark (&:is(.dark *));

/* Tailwind configuration */
@theme {
  --color-primary: var(--color-sky-500);

  --font-inter: var(--font-family-inter);
  --font-caveat: var(--font-family-caveat);
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}


:root {
  --max-content-width: 1024px;

  @apply scroll-smooth xl:[--max-content-width:1280px];
}

@layer base {
  body {
    @apply font-inter relative dark:bg-neutral-950 dark:text-neutral-200 text-[17px] xl:text-[19px];
  }

  * {
    box-sizing: border-box;
  }

  a {
    @apply text-primary md:hover:underline hover:brightness-[0.92] dark:hover:brightness-110;
  }
}


body > *:not(.blurred-background, footer) {
  @apply relative z-5;
}

.blurred-background {
  @apply bg-[url(/blurred-background.webp)] bg-cover bg-center bg-no-repeat bg-white dark:bg-neutral-950;
}


.project img {
  transition: all .4s ease;
  @apply [--shadow-color:0_0_0] dark:[--shadow-color:255_255_255];
}

.project:nth-child(odd) img {
  transform: perspective(1000px) rotateY(13deg) rotateX(5deg) rotate(-1deg) scaleY(.9) scaleX(.95) translate(3%) translateY(-3%);
  box-shadow: -14px 26px 10px rgb(var(--shadow-color) / 12%);
}
.project:nth-child(odd) img:hover {
  transform: perspective(1000px) rotateY(0) rotateX(0) rotate(0) scale(1) translate(0) translateY(0)!important;
  box-shadow: 0px 4px 10px rgb(var(--shadow-color) / 12%);
}
.project:nth-child(even) img {
  transform: perspective(1000px) rotateY(-13deg) rotateX(5deg) rotate(1deg) scaleY(.9) scaleX(.95) translate(-3%) translateY(-3%);
  box-shadow: 14px 26px 10px rgb(var(--shadow-color) / 12%);
}
.project:nth-child(even) img:hover {
  transform: perspective(1000px) rotateY(0) rotateX(0) rotate(0) scale(1) translate(0) translateY(0)!important;
  box-shadow: 0px 4px 10px rgb(var(--shadow-color) / 12%);
}

@supports (animation-timeline: view()) {
  .scroll-reveal {
    animation: var(--reveal-effect, opacity) linear both;
    animation-timeline: view();
    animation-range:
      cover var(--reveal-start, 6%)
      cover calc(var(--reveal-start, 6%) + var(--reveal-range, 10%));
  }
}

@keyframes morph {
  0% {
    border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;
  }
  50% {
    border-radius: 30% 60% 70% 40% / 50% 60% 30% 60%;
  }
  100% {
    border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;
  }
}

@keyframes whale {
  0% {
    transform: rotate(0deg) translate(0%, 0%);
  }
  25% {
    transform: rotate(15deg) translate(0%, -10%);
  }
  50% {
    transform: rotate(0deg) translate(0%, 0%);
  }
  75% {
    transform: rotate(-15deg) translate(0%, 10%);
  }
}

@keyframes scale {
	from {
    transform: perspective(1000px) rotateY(73deg) rotateX(55deg) rotateZ(-10deg) scale(0.6);
	}
	to {
    transform: perspective(1000px) rotateY(0deg) rotateX(0deg) rotateZ(0deg) scale(1);
	}
}

@keyframes opacity {
	from {
    opacity: 0;
	}
	to {
    opacity: 1;
	}
}

.hamburger-icon {
  @apply relative drop-shadow-lg;
  @apply before:block before:rounded-full before:h-[4px] before:w-[32px] before:duration-300 before:bg-black dark:before:bg-white before:content-[''];
  @apply after:block after:rounded-full after:h-[4px] after:w-[32px] after:duration-300 after:bg-black dark:after:bg-white after:content-[''] after:mt-[12px];
}
.hamburger-icon.close-icon {
  @apply before:[transform:rotateZ(134deg)_translate(7px,-7px)] after:[transform:rotateZ(-135deg)_translate(4px,5px)];
}

#nprogress .spinner {
  display: none !important;
}
